version: '3.6'

services:
  gitlab:
    image: 'gitlab/gitlab-ee:latest'
    container_name: gitlab
    restart: always
    hostname: 'gitlab'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab'
    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '/srv/gitlab/config:/etc/gitlab'
      - '/srv/gitlab/logs:/var/log/gitlab'
      - '/srv/gitlab/data:/var/opt/gitlab'
    shm_size: '256m'

  runner:
    image: gitlab/gitlab-runner:latest
    container_name: runner
    restart: always
    depends_on: [ "gitlab" ]
    volumes:
      - 'gitlab-runner-config:/etc/gitlab-runner'
      - '/var/run/docker.sock:/var/run/docker.sock'

  postgres:
    image: postgres:12.7-alpine
    restart: always
    container_name: faraday_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=faraday
    ports:
      - '5432'
    volumes:
      - "db:/var/lib/postgresql/data:rw"

  redis:
    image: 'redis:6.2-alpine'
    container_name: faraday_redis
    ports:
      - '6379'

  faraday:
    image: index.docker.io/faradaysec/faraday
    restart: always
    container_name: faraday
    volumes:
      - "$HOME/.faraday:/home/faraday/.faraday:rw"
    environment:
      - PGSQL_USER=postgres
      - PGSQL_PASSWD=postgres
      - PGSQL_HOST=postgres
      - PGSQL_DBNAME=faraday
      - REDIS_SERVER=redis
    depends_on:
      - postgres
      - redis
    ports:
      - "5985:5985"

  sonarqube:
    image: sonarqube:9.6.1-community
    container_name: sonarqube
    ports:
      - '9000:9000'
    volumes:
      - "sonarqube_data:/opt/sonarqube/data"
      - "sonarqube_extensions:/opt/sonarqube/extensions"
      - "sonarqube_logs:/opt/sonarqube/logs"

  app:
    image: bkimminich/juice-shop
    container_name: app
    ports:
      - "3000:3000"

volumes:
  gitlab-runner-config:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  db:
